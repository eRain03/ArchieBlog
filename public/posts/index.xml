<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on 未淼 </title>
    <link>http://localhost:1313/posts/</link>
    <description>Recent content in Posts on 未淼 </description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <copyright> r3eck1ng</copyright>
    <lastBuildDate>Sun, 07 Jul 2024 01:02:24 +0800</lastBuildDate>
    <atom:link href="http://localhost:1313/posts/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>GRE Over IPSec 短记</title>
      <link>http://localhost:1313/posts/2024/07/07/gre-over-ipsec-%E7%9F%AD%E8%AE%B0/</link>
      <pubDate>Sun, 07 Jul 2024 01:02:24 +0800</pubDate>
      <guid>http://localhost:1313/posts/2024/07/07/gre-over-ipsec-%E7%9F%AD%E8%AE%B0/</guid>
      <description>&lt;blockquote&gt;&#xA;&lt;p&gt;要求FW1 与 RT2 之间用 Internet 互联地址建立 GRE Over IPSec VPN,&#xA;实现 Loopback4 之间的加密访问。RT2 的 ACL 名称为 ACL-VPN,&#xA;transform-set 名称为 SET-1,crypto map 名称为 MAP-1。FW1 的&#xA;isakmp proposal 名称为 P-1,isakmp peer 名称为 PEER-1,ipsec&#xA;proposal 名称为 P-2,tunnel ipsec 名称为 IPSEC-1,tunnel gre 名&#xA;称为 GRE-1。&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;p&gt;网络拓扑如下&lt;/p&gt;&#xA;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th&gt;Internet交换机&lt;/th&gt;&#xA;          &lt;th&gt;200.200.200.1；200.200.200.5&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;RT2&lt;/td&gt;&#xA;          &lt;td&gt;连接Internet交换机   IP 地址为200.200.200.2&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;FW2&lt;/td&gt;&#xA;          &lt;td&gt;连接Internet交换机   自身IP为200.200.200.6&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;p&gt;测试RT2是否能通过Internet Ping通 FW1&#xA;&lt;code&gt;Ping 200.200.200.6 -i 200.200.200.2&lt;/code&gt;&lt;/p&gt;&#xA;&lt;p&gt;RT2配置&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;interface Tunnel4&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;ip address 10.4.255.50 255.255.255.252&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;tunnel source 200.200.200.6&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;tunnel destination 200.200.200.2&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;tunnel speed-up&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;---&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;crypto isakmp key 0 Key-1122 address 200.200.200.2 255.255.255.255&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;crypto isakmp policy 1&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;authentication pre-share&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;encryption 3des&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;group 2&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;hash md5&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;!&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;crypto ipsec transform-set SET-1 esp-3des esp-md5-hmac&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;!&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;crypto map MAP-1 1 ipsec-isakmp&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;match address ACL-VPN&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;set peer 200.200.200.2&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;set transform-set SET-1&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;---&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;ip access-list extended ACL-VPN&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;permit gre 200.200.200.6 255.255.255.255 200.200.200.2 255.255.255.255&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;不要忘记了设置静态路由&lt;/p&gt;</description>
    </item>
    <item>
      <title>Hadoop集群配置</title>
      <link>http://localhost:1313/posts/2024/03/19/hadoop%E9%9B%86%E7%BE%A4%E9%85%8D%E7%BD%AE/</link>
      <pubDate>Tue, 19 Mar 2024 08:45:15 +0800</pubDate>
      <guid>http://localhost:1313/posts/2024/03/19/hadoop%E9%9B%86%E7%BE%A4%E9%85%8D%E7%BD%AE/</guid>
      <description>&lt;h1 id=&#34;先前条件&#34;&gt;先前条件&lt;/h1&gt;&#xA;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th&gt;Node1&lt;/th&gt;&#xA;          &lt;th&gt;Node2&lt;/th&gt;&#xA;          &lt;th&gt;Node3&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;192.168.1.39&lt;/td&gt;&#xA;          &lt;td&gt;192.168.1.9&lt;/td&gt;&#xA;          &lt;td&gt;192.168.1.40&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;h2 id=&#34;关闭防火墙&#34;&gt;关闭防火墙&lt;/h2&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; 停止防火墙进程&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;systemctl stop firewalld.service&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;禁用防火墙开机启动&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;systemctl disable firewalld.service&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;对三个节点分别修改主机名&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;hostnamectl set-hostname Node{1,2,3}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;安装必要软件环境&#34;&gt;安装必要软件环境&lt;/h2&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;yum install -y java-1.8.0-openjdk vim &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;#安装jdk8和vim等必备软件&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;修改hosts文件定向主机ip&#34;&gt;修改Hosts文件定向主机IP&lt;/h2&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;vim /etc/hosts&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;node1 192.168.1.39&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;node2 192.168.1.9&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;node3 192.168.1.40&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;ping node1&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;ping node2&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;ping node3&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;测试连通性&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;给node123添加hadoop用户并赋予sudo权限&#34;&gt;给Node123添加hadoop用户并赋予sudo权限&lt;/h2&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Node123全部要做&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;[root@node2 ~]# useradd hadoop&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;[root@node2 ~]# # 设置密码需要手动输入两次密码，笔者这里也暂时设定密码为hadoop&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;[root@node2 ~]# passwd hadoop&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;更改用户 hadoop 的密码 。&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;新的 密码：&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;重新输入新的 密码：&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;passwd：所有的身份验证令牌已经成功更新。&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;[root@node2 ~]# mkdir -p /data/hadoop&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;[root@node2 ~]# chown hadoop:hadoop /data/hadoop&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;chmod u+w /etc/sudoers&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;vim /etc/sudoers&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;# 在sudoers文件的root用户一行后面添加下面内容并且保存&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;hadoop ALL=(ALL) NOPASSWD:ALL &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;chmod u-w /etc/sudoers&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sudo chmod -R a+w /data/hadoop&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;生成rsa密钥ssh免密登录&#34;&gt;生成RSA密钥SSH免密登录&lt;/h2&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Node123全部要做&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;su hadoop&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;ssh-keygen -t rsa&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;##按几次回车&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;cd /home/hadoop/.ssh/&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;cat id_rsa.pub &amp;gt;&amp;gt; authorized_keys&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;vim authorized_keys&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;##把其他主机的添加进去&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;最后每个节点的authorized_keys内容都应该是这样的：&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDTwzdM+cmFy1lO4bNpD1T5+EO0FNvBBymf3B/Pdd92/Dq3Z3cTr+XHL9HWrIZPxDoWCm7OQY9Ek3oCJgjhlnxowQbtHp8GUKmmJma19NStBNHrO8T3wpbypOgUB7xJQZclpPpxrkkiMbGEU5MV3wJxFPEA2Sd3b7sdYx2YW/hMU94UabbzV4aJjtsG9GHHx4yq9e9/P31jnidhf013F7t9lIBdCPlgHj7+feliVhjSM1jbUt3CFDsskkFXMKuzVHP6B/ipviFtLt6SA3AgDIvFFD3CYV2KgiCd7JKqR/a+8765ML9auSubf7JegDUBvVXDt+fPOVc1Lm37nCyhGLjX hadoop@node1&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQD3arpeN86cemzQPdz86oQV+gKk3A9MTpNAvFNl8QLfiYft8Hscsp3oQkdyWd+vnu/VxUa7URx6iOAfaTluYOlyY18A41wnAkE9xP3861Mak8SmvPPxsj8wsC8KugBk2uGVeOHjHyMQW0Qcd/Qe/2jnqsbDJsuK7ZyxOzEHbMaIb3IRIo6x1WVUv6x4oX9mJkgZw066Wzu0nNAanDDKDmP+Ncz1OcnGoYd+B+YUqeXtPJ7acQtBoNO/2Hp35G5CK5j5VH0Yj5HKUyy1t3jv+PuSc2HVMlHLidx+CxuDYWZd2O/4GRqjnT7xLo88aBE8fAVSr876FyfJDBdYLSC66nyZ hadoop@node2&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQC7I19R6/js2tvicWcATaNzXlY+BVELMqDx2vhqfnlJAdlfOtyAgsaCduu8hu4El6WZymTckjX1YumeIHr8oGdajNtYugAcOcELijCFCnGUc4xcuVqVWw/Xf4TlT9wg3S9L33+Zj1EYvXp3lq04dyWO2VvZN2Iqq+bhk4tPZdGLttYqo24oXTr+kvyzYy7zeBTQmovVWaDT43ZpYSSzq5M8chjOvR0kPt/ygb/cuV2ZnTAXfNpTF/SHZIWeWqbAIexcdEnczATR/0f5Z/wFrAiG+Awppi1zNVLn1oRoC5sVQ61jqAuvZxAEp5AdgzRdTp3DFtynxVWqsgDmMFTOKNkX hadoop@node3&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;全部完事了记着赋予目录权限&#xA;&lt;code&gt;chmod 700 /home/hadoop/.ssh/ &amp;amp;&amp;amp; chmod 700 /home/hadoop/ &amp;amp;&amp;amp; chmod 600 /home/hadoop/.ssh/authorized_keys&lt;/code&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>《我，机器人》小记</title>
      <link>http://localhost:1313/posts/2024/01/22/%E6%88%91%E6%9C%BA%E5%99%A8%E4%BA%BA%E5%B0%8F%E8%AE%B0/</link>
      <pubDate>Mon, 22 Jan 2024 21:58:34 +0800</pubDate>
      <guid>http://localhost:1313/posts/2024/01/22/%E6%88%91%E6%9C%BA%E5%99%A8%E4%BA%BA%E5%B0%8F%E8%AE%B0/</guid>
      <description>&lt;blockquote&gt;&#xA;&lt;p&gt;第一法则&#xA;机器人不得伤害人类，或坐视人类受到伤害；&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;第二法则&#xA;机器人必须服从人类命令，除非命令与第一法则发生冲突；&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;第三法则&#xA;在不违背第一或第二法则之下，机器人可以保护自己。&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;p&gt;这不是我第一次读这本书，开篇著名的艾氏机器人三定律首次登场&#xA;本书一共9个短篇，以回忆的方式叙述出来，所谓用“机器人心理学“去和异常的机器人打交道，如同书的标题“I,Robot”&#xA;书中的机器人三定律的第一法则的电平大于第二法则，第二法则的电平大于第三规则，机器人必须遵守这些“硬代码”否则会自毁&lt;/p&gt;&#xA;&lt;p&gt;我很喜欢《Liar!》这篇（译文翻译的是“说假话的机器人”） 在生产机器人的的过程中出现了失误，使得机器人（代号：Herbie）拥有了类似读取脑电波的能力，赫比给研究机器人的专家们展现了它读取他们想法的能力，在谈话中赫比向人们透露了其他人的想法，使心理学家苏珊在感情问题上得到了她想知道的答案，赫比告诉了苏珊 米尔顿对她的爱恋之情，苏珊信以为真但在之后的聊天中米尔顿告诉苏珊自己要结婚了，苏珊这才意识到赫比欺骗了她，当众人人质问赫比为什么要撒谎时，赫比被逼的几乎疯癫说出了原因&lt;/p&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;“机器人不得伤害人类，或坐视人类受到伤害“&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;p&gt;原来在赫比的逻辑中第一法则的电平依然是最大的，远超第二法则，赫比认为告诉他们真话会伤害到人类的感情，于是告诉了他们心中希望听到的答案 苏珊博士处于被欺骗和感情上的羞辱报复性地对赫比说&#xA;&lt;em&gt;“你不能告诉他们，因为告诉他们，就是伤害他们，可如果你不告诉他们，你就是在伤害他们…”&lt;/em&gt;&#xA;赫比在心理学家苏珊的思想中感受到了无尽的苦痛，屈辱和仇恨，最终在苏珊创造的逻辑悖论下变成了一坨再也不能思考的废铁&lt;/p&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;机器人理解不了人类的感情，它只能按照第一法则去避免伤害到人类，没想到这种谎言最终使物理的伤害转变为了精神上的痛苦&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;这很有意思，不禁令人思考当下火爆的人工智能模型如何判断伤害到人类的范畴，人们也许会允许人在一些事情上犯错，但这种宽容会出现在人工智能上吗?&lt;/p&gt;&#xA;&lt;/blockquote&gt;</description>
    </item>
    <item>
      <title>OSPF是如何计算出路由表来的？什么是SPF算法？</title>
      <link>http://localhost:1313/posts/2023/12/31/ospf%E6%98%AF%E5%A6%82%E4%BD%95%E8%AE%A1%E7%AE%97%E5%87%BA%E8%B7%AF%E7%94%B1%E8%A1%A8%E6%9D%A5%E7%9A%84%E4%BB%80%E4%B9%88%E6%98%AFspf%E7%AE%97%E6%B3%95/</link>
      <pubDate>Sun, 31 Dec 2023 01:08:23 +0800</pubDate>
      <guid>http://localhost:1313/posts/2023/12/31/ospf%E6%98%AF%E5%A6%82%E4%BD%95%E8%AE%A1%E7%AE%97%E5%87%BA%E8%B7%AF%E7%94%B1%E8%A1%A8%E6%9D%A5%E7%9A%84%E4%BB%80%E4%B9%88%E6%98%AFspf%E7%AE%97%E6%B3%95/</guid>
      <description>&lt;blockquote&gt;&#xA;&lt;p&gt;OSPF是如何计算出路由表来的？什么是SPF算法？写下在查阅了各种文档和书籍后开始对OSPF的一些理解，做此纪录用于学习和分享。&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;h1 id=&#34;ospf的特性&#34;&gt;OSPF的特性&lt;/h1&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;[Wiki] Wiki百科中这样写到&#xA;&lt;strong&gt;开放式最短路径优先&lt;/strong&gt;（英语：Open Shortest Path First，缩写为 OSPF）是广泛使用的一种路由协议，它属于链路状态路由协议，具有路由变化收敛速度快、无路由环路、支持变长子网掩码（VLSM）和汇总、层次区域划分等优点。&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;p&gt;不难看出OSPF有很多难以拒绝的优点，收敛速度快，树状的拓扑时期不会出现环路问题，很容易划分区域，方便管理等，也许这就是为什么大多数企业都会选择OSPF的原因(对比RIP不要好用太多太多)&#xA;在上一篇文章中，我们讨论了OSPF是如何选举DR，如何建立链接以及如何交换LSA数据库的。如果你还没有看那篇文章，建议先读一读再继续。&lt;/p&gt;&#xA;&lt;p&gt;今天主要来看OSPF是如何计算出最短路由的。&lt;/p&gt;&#xA;&lt;h1 id=&#34;spf算法如何计算出优先算短路径&#34;&gt;SPF算法如何计算出优先算短路径？&lt;/h1&gt;&#xA;&lt;p&gt;SPF算法中有一个很重要的点叫Cost(花费),中文翻译过来叫花费，听起来就像去超市买东西花费了很多钱一样，但它有所不同，它更像是你从家门口打车去到某一个地方花了多少钱。&#xA;在树状图中Cost的值代表了一个节点到另一个节点所花费的跃点(Cost)，其实就是你经过了几个路由(节点)。&#xA;&lt;em&gt;为什么是树状图？&lt;/em&gt;&lt;/p&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;如果对STP生成树协议有所了解的话，我们就会知道树状图能有效避免环路的问题，如图，树状图不会有任何一个”三角形“出现，这样的结构能避免环路的问题。&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/eRain03/cuttotail/main/2.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;回到正题，我们要知道一点每一台路由(节点)都会运行SPF算法来计算出最短路径来，就像图中这四个节点一样，R1会计算出如下信息&#xA;&lt;em&gt;&lt;strong&gt;R1&amp;mdash;R2    Cost=1&lt;/strong&gt;&lt;/em&gt;&#xA;但它会计算其他的路径吗，不会。因为SPF不计算间接连接的节点所的Cost值。这或许能解释为什么在配置ospf时我们只会配置相邻的网段而不会配置间接连接的网段。我将四个节点所计算出的信息一一列出&#xA;&lt;em&gt;&lt;strong&gt;R1:&lt;/strong&gt;&lt;/em&gt;&#xA;&lt;em&gt;&lt;strong&gt;R1&amp;mdash;R2    Cost=1&lt;/strong&gt;&lt;/em&gt;&#xA;&lt;em&gt;&lt;strong&gt;R2:&lt;/strong&gt;&lt;/em&gt;&#xA;&lt;em&gt;&lt;strong&gt;R2&amp;mdash;R1    Cost=1        R2&amp;mdash;R3    Cost=1&lt;/strong&gt;&lt;/em&gt;&#xA;&lt;em&gt;&lt;strong&gt;R3:&lt;/strong&gt;&lt;/em&gt;&#xA;&lt;em&gt;&lt;strong&gt;R3&amp;mdash;R2    Cost=1        R3&amp;mdash;R4    Cost=1&lt;/strong&gt;&lt;/em&gt;&#xA;&lt;em&gt;&lt;strong&gt;R4:&lt;/strong&gt;&lt;/em&gt;&#xA;&lt;em&gt;&lt;strong&gt;R4&amp;mdash;R3    Cost=1&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt;&#xA;&lt;p&gt;此时每个节点会将自己计算的信息打包和相邻的节点进行数据库交互，它们交换数据包，就有了完整的最短路径树，如下：&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;R1的路径表：&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;到达R2的最短路径：R1-&amp;gt;R2，链路成本(Cost)为1&lt;/li&gt;&#xA;&lt;li&gt;到达R3的最短路径：R1-&amp;gt;R2-&amp;gt;R3，链路成本为2&lt;/li&gt;&#xA;&lt;li&gt;到达R4的最短路径：R1-&amp;gt;R2-&amp;gt;R3-&amp;gt;R4，链路成本为3&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;R2的路径表：&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;到达R1的最短路径：R2-&amp;gt;R1，链路成本为1&lt;/li&gt;&#xA;&lt;li&gt;到达R3的最短路径：R2-&amp;gt;R3，链路成本为1&lt;/li&gt;&#xA;&lt;li&gt;到达R4的最短路径：R2-&amp;gt;R3-&amp;gt;R4，链路成本为2&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;R3的路径表：&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;到达R1的最短路径：R3-&amp;gt;R2-&amp;gt;R1，链路成本为2&lt;/li&gt;&#xA;&lt;li&gt;到达R2的最短路径：R3-&amp;gt;R2，链路成本为1&lt;/li&gt;&#xA;&lt;li&gt;到达R4的最短路径：R3-&amp;gt;R4，链路成本为1&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;R4的路径表：&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;到达R1的最短路径：R4-&amp;gt;R3-&amp;gt;R2-&amp;gt;R1，链路成本为3&lt;/li&gt;&#xA;&lt;li&gt;到达R2的最短路径：R4-&amp;gt;R3-&amp;gt;R2，链路成本为2&lt;/li&gt;&#xA;&lt;li&gt;到达R3的最短路径：R4-&amp;gt;R3，链路成本为1&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/eRain03/cuttotail/main/1.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;h2 id=&#34;最短路径树&#34;&gt;最短路径树&lt;/h2&gt;&#xA;&lt;p&gt;完整的最短路径树就是如此生成出来的，有了最短路径树，就像有了一张绝对快速不拖沓的地图。&#xA;用这张地图来计算路由表，计算出类似的信息&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;目标网络：x.x.x.x/x    （查找最短路径）&#xA;&lt;ul&gt;&#xA;&lt;li&gt;下一跳：y.y.y.y      （选择最快的下一跳路由）&lt;/li&gt;&#xA;&lt;li&gt;出接口：GigabitEthernet0/1&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;SPF（Shortest Path First，最短路径优先）算法，也称为Dijkstra算法，是OSPF用来计算最短路径的核心算法。总结下来一共四大步骤，下面是SPF算法的工作原理和步骤：&lt;/p&gt;&#xA;&lt;h3 id=&#34;1-初始步骤&#34;&gt;1. 初始步骤&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;每个OSPF路由器会创建一个链路状态数据库（LSDB），存储关于网络拓扑的所有信息。&lt;/li&gt;&#xA;&lt;li&gt;路由器通过发送和接收链路状态广告（LSA）来更新其LSDB，确保所有路由器的LSDB保持一致。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;2-计算cost值&#34;&gt;2. 计算Cost值&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;Cost（花费）&lt;/strong&gt;：在OSPF中，Cost表示路由器到达目标网络的开销。Cost的值可以根据链路的带宽、延迟等因素进行设置。默认情况下，OSPF根据链路带宽计算Cost值，带宽越高，Cost越低。&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;树状图&lt;/strong&gt;：OSPF使用树状拓扑结构避免环路问题。每个路由器只计算直接相连的链路的Cost值，并根据这些信息逐步构建整个网络的最短路径树。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;3-运行spf算法&#34;&gt;3. 运行SPF算法&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;初始节点&lt;/strong&gt;：从源节点（当前路由器）开始，将其标记为已访问，并初始化其到自身的Cost为0。&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;扩展节点&lt;/strong&gt;：从当前节点开始，访问所有直接相连的节点，计算每个节点的累计Cost值，并选择累计Cost值最小的节点作为下一个访问节点。&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;重复计算&lt;/strong&gt;：重复上述步骤，直到访问所有节点，生成一棵完整的最短路径树。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;4-生成路由表&#34;&gt;4. 生成路由表&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;每个路由器根据生成的最短路径树，更新其路由表。&lt;/li&gt;&#xA;&lt;li&gt;路由表包含目标网络、下一跳地址和出接口等信息。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;最短路径树中的每个节点都有一个数据库，数据库中包含了目标网络的最短路径和下一跳路由的地址信息，路由器根据最短路径树去更新自己的路由表，实现高效率，高速度，优质的通信。&lt;/p&gt;</description>
    </item>
    <item>
      <title>Syntax Higlighters</title>
      <link>http://localhost:1313/posts/2020/06/23/syntax-higlighters/</link>
      <pubDate>Tue, 23 Jun 2020 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/posts/2020/06/23/syntax-higlighters/</guid>
      <description>&lt;h2 id=&#34;python&#34;&gt;Python&lt;/h2&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-py&#34; data-lang=&#34;py&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;sum&lt;/span&gt;(a,b):&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; a&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;b&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;print(&lt;span style=&#34;color:#e6db74&#34;&gt;f&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;The Sum of 4 and 5 is &lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;{&lt;/span&gt;sum(&lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;)&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;javascript&#34;&gt;JavaScript&lt;/h2&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;const&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;sum&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; (&lt;span style=&#34;color:#a6e22e&#34;&gt;a&lt;/span&gt;,&lt;span style=&#34;color:#a6e22e&#34;&gt;b&lt;/span&gt;)=&amp;gt;{&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;a&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;b&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;console&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;log&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;sum&lt;/span&gt;(&lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;))&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;go&#34;&gt;Go&lt;/h2&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-go&#34; data-lang=&#34;go&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;package&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;main&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; (&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;fmt&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;func&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;addition&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;a&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt;, &lt;span style=&#34;color:#a6e22e&#34;&gt;b&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt;) &lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;a&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;b&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;func&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;main&lt;/span&gt;() {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#a6e22e&#34;&gt;x&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;:=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;addition&lt;/span&gt;(&lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#a6e22e&#34;&gt;fmt&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;Println&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;x&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>Telegram Bot for  GitHub Actions</title>
      <link>http://localhost:1313/posts/2020/04/01/telegram-bot-for-github-actions/</link>
      <pubDate>Wed, 01 Apr 2020 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/posts/2020/04/01/telegram-bot-for-github-actions/</guid>
      <description>&lt;h2 id=&#34;telegram&#34;&gt;Telegram&lt;/h2&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://telegram.org/&#34;&gt;Telegram&lt;/a&gt; is a cloud-based mobile and desktop messaging app with a focus on security and speed. It is free to use and extensively hackable. It also has a good bot support system. The API is also easy to implement and has many wrappers for building bots with the API.&lt;/p&gt;&#xA;&lt;h2 id=&#34;github-actions&#34;&gt;GitHub Actions&lt;/h2&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/features/actions&#34;&gt;GitHub Actions&lt;/a&gt; is a CI/CD runtime for your GitHub repository. You can run almost anything from scripts to docker containers. You can build, test and deploy your code with GitHub Actions. All these actions are called workflows and workflows differ in the job they&amp;rsquo;re doing. These maybe test workflows, build ones or deployment ones. You can find all the actions on GitHub in the &lt;a href=&#34;https://github.com/marketplace?type=actions&#34;&gt;marketplace&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>横向移动 通过SSH连接使目标机及作为Socks5代理服务器</title>
      <link>http://localhost:1313/posts/2019/10/15/%E6%A8%AA%E5%90%91%E7%A7%BB%E5%8A%A8-%E9%80%9A%E8%BF%87ssh%E8%BF%9E%E6%8E%A5%E4%BD%BF%E7%9B%AE%E6%A0%87%E6%9C%BA%E5%8F%8A%E4%BD%9C%E4%B8%BAsocks5%E4%BB%A3%E7%90%86%E6%9C%8D%E5%8A%A1%E5%99%A8/</link>
      <pubDate>Tue, 15 Oct 2019 20:05:30 +0800</pubDate>
      <guid>http://localhost:1313/posts/2019/10/15/%E6%A8%AA%E5%90%91%E7%A7%BB%E5%8A%A8-%E9%80%9A%E8%BF%87ssh%E8%BF%9E%E6%8E%A5%E4%BD%BF%E7%9B%AE%E6%A0%87%E6%9C%BA%E5%8F%8A%E4%BD%9C%E4%B8%BAsocks5%E4%BB%A3%E7%90%86%E6%9C%8D%E5%8A%A1%E5%99%A8/</guid>
      <description>&lt;h2 id=&#34;直接说方法&#34;&gt;直接说方法&lt;/h2&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;ssh -D &amp;lt;本地端口号&amp;gt; -f -C -q -N &amp;lt;用户名&amp;gt;@&amp;lt;SSH服务器地址&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;code&gt;-D &amp;lt;本地端口号&amp;gt;&lt;/code&gt;：指定一个端口号，会在本地创建一个Socks5端口用于转发，所有通过这个端口号的连接都将被转发到SSH建立连接后的服务器，并由服务器发送到目标地址&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;code&gt;-C&lt;/code&gt;：启用压缩，通过使用压缩，减少数据传输量，提高传输速度&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;code&gt;-q&lt;/code&gt;：使用安静模式，禁止SSH客户端在连接过程中输出任何警告或错误消息，只输出关键信息&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;code&gt;-N&lt;/code&gt;：告诉SSH客户端不要执行任何远程命令，在此情况下，只会建立SSH连接并启用端口转发&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;很多情况下，我们想要借助一台处于内网又能出网的业务服务器来访问到内网部分，又不能直接在服务器上安装服务，可以用服务器自带ssh服务建立一个连接，打通你和内网的互通，很方便，记录一下&lt;/p&gt;&#xA;&lt;/blockquote&gt;</description>
    </item>
  </channel>
</rss>
